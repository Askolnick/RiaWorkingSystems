Database Migration & Schema Cleanup

  # Fix the 74+ schema validation errors first
  pnpm db:migrate dev
  - Clean up duplicate RoadmapItem models
  - Add CHECK constraints for entity type validation
  - Run migration to create EntityLink table

  2. Integration into Existing Modules

  Start with high-value integrations:

  Tasks Module - Add relationship management:
  - Link tasks to projects/documents
  - Show dependencies in task views
  - Add "Blocked by" / "Blocking" indicators

  Projects Module - Enhanced project context:
  - Link projects to contacts/organizations
  - Show related documents and wiki pages
  - Display project task dependencies

  Wiki Module - Knowledge graph:
  - Link wiki pages to tasks/projects
  - Create knowledge relationship maps
  - Show "Referenced in" sections

  3. Create Entity Link Hooks

  // useEntityLinks hook for easy integration
  export const useEntityLinks = (entity: EntityRef) => {
    const { links, loading, error, refetch } = useQuery({
      queryKey: ['entity-links', entity],
      queryFn: () => entityLinkService.getEntityLinks(entity)
    });

    return { links, loading, error, refetch };
  };

  🚀 Short-term Goals (Week 1-2)

  4. Add EntityLink Panel to Core Pages

  - Task detail page: Show all relationships
  - Project overview: Display linked entities
  - Contact profile: Show associated items
  - Invoice view: Link to projects/tasks

  5. Implement Smart Suggestions

  - Auto-suggest related entities when creating links
  - Recommend links based on patterns
  - Detect potential duplicates

  6. Create Link Templates

  - Standard project-task hierarchies
  - Common document associations
  - Team collaboration patterns

  📈 Medium-term Enhancements (Week 3-4)

  7. Advanced Features

  - Bulk Linking UI: Link multiple entities at once
  - Link Import/Export: CSV/JSON support
  - Link Analytics: Most connected entities, orphaned items
  - Link History: Track link changes over time

  8. Performance Optimization

  - Implement Redis caching layer
  - Add GraphQL for efficient link queries
  - Create materialized views for common patterns

  9. Enhanced Visualizations

  - D3.js force-directed graphs
  - Hierarchical tree views
  - Sankey diagrams for workflows
  - Network analysis metrics

  🔮 Long-term Vision (Month 2+)

  10. AI-Powered Features

  // Intelligent link suggestions
  const suggestedLinks = await aiService.suggestLinks(entity, {
    basedOn: 'similar_entities',
    confidence: 0.8
  });

  // Auto-categorization
  const linkCategory = await aiService.categorizeLink(from, to);

  11. Workflow Automation

  - Trigger actions on link creation
  - Cascade updates through linked entities
  - Automated dependency resolution

  12. Advanced Analytics

  - Entity relationship insights
  - Collaboration patterns analysis
  - Bottleneck identification
  - Knowledge gap detection

  📝 Implementation Checklist

  ## This Week
  - [ ] Fix database schema validation errors
  - [ ] Run EntityLink migration
  - [ ] Add EntityLink panel to Task page
  - [ ] Add EntityLink panel to Project page
  - [ ] Create useEntityLinks hook
  - [ ] Add "Quick Link" action to entity menus

  ## Next Week
  - [ ] Implement link suggestions
  - [ ] Add bulk linking interface
  - [ ] Create link templates system
  - [ ] Add link search/filter capabilities
  - [ ] Implement link notifications

  ## This Month
  - [ ] Redis caching integration
  - [ ] Advanced graph visualizations
  - [ ] Link analytics dashboard
  - [ ] Import/export functionality
  - [ ] API documentation

  🔧 Quick Integration Example

  Here's how to add EntityLinks to any existing page:

  // In any entity detail page (e.g., TaskDetailPage.tsx)
  import { EntityLinkViewer } from '@ria/web-ui';
  import { createEntityRef } from '@ria/client';

  export function TaskDetailPage({ task }) {
    const taskEntity = createEntityRef('task', task.id, task.tenantId);

    return (
      <div>
        {/* Existing task details */}

        {/* Add EntityLink panel */}
        <EntityLinkViewer
          entity={taskEntity}
          showCreateButton={true}
          allowedLinkKinds={['depends_on', 'blocks', 'references', 'assigned_to']}
          onLinkCreated={(link) => {
            // Refresh task data or show notification
            toast.success('Link created successfully');
          }}
        />
      </div>
    );
  }

  🎨 UI/UX Improvements

  1. Add to Navigation Dock: Quick link creation button
  2. Context Menus: Right-click to create links
  3. Drag & Drop: Drag entities to create links
  4. Keyboard Shortcuts: Cmd+L for quick link dialog
  5. Smart Search: Search across linked entities

  📊 Success Metrics

  Track adoption and value:
  - Links created per day
  - Most linked entity types
  - Average links per entity
  - Time saved through link navigation
  - User engagement with link features

