version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: ria_postgres
    environment:
      POSTGRES_DB: ria_db
      POSTGRES_USER: ria_user
      POSTGRES_PASSWORD: ria_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ria_user -d ria_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ria_network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: ria_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ria_network

  # Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: ria_web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=super-secret-nextauth-key
      - DATABASE_URL=postgresql://ria_user:ria_password@postgres:5432/ria_db
      - REDIS_URL=redis://redis:6379
      - NEXT_PUBLIC_USE_MOCK_DATA=false
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ria_network
    restart: unless-stopped

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: ria_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    networks:
      - ria_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  ria_network:
    driver: bridge